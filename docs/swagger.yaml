definitions:
  handlers.OTPRequest:
    properties:
      otp:
        type: string
    required:
    - otp
    type: object
  handlers.registrationData:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.Market:
    type: object
  models.Product:
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: This is a sample server for My API.
  termsOfService: http://example.com/terms/
  title: My API
  version: "1.0"
paths:
  /auth/otp-code:
    post:
      consumes:
      - application/json
      description: Для ввода кода подтверждения, который приходит на почту
      parameters:
      - description: OTPRequest data
        in: body
        name: OTPRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.OTPRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Код подтверждения
      tags:
      - auth
  /auth/registration:
    post:
      consumes:
      - application/json
      description: Для регистрации ребуется передать уникальный username, пароль и
        уникальный email
      parameters:
      - description: registrationData data
        in: body
        name: registrationData
        required: true
        schema:
          $ref: '#/definitions/handlers.registrationData'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Регистрация пользователя
      tags:
      - users
      - auth
  /createMarket:
    post:
      consumes:
      - application/json
      description: Данный запрос позволяет создать магазин, если формат данных соответствует
        структуре models.Market
      parameters:
      - description: Market data
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/models.Market'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Создание магазина
      tags:
      - markets
  /createProduct:
    post:
      consumes:
      - application/json
      description: Данный запрос позволяет создать продукт, если формат данных соответствует
        структуре models.Product
      parameters:
      - description: Product data
        in: body
        name: market
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses: {}
      summary: Создание продукта
      tags:
      - products
  /markets:
    get:
      consumes:
      - application/json
      description: Данный запрос позволяет получить список всех магазинов, их данных
        и товаров внутри них
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Все магазины
      tags:
      - markets
  /products:
    get:
      consumes:
      - application/json
      description: Данный запрос позволяет получить список всех продуктов и данных
        о них
      produces:
      - application/json
      responses: {}
      summary: Все продукты
      tags:
      - products
  /products/{market_id}:
    get:
      consumes:
      - application/json
      description: Данный запрос позволяет получить список товаров магазина по id
        магазина
      parameters:
      - description: Market ID
        in: path
        name: market_id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Продукты по marketID
      tags:
      - products
      - markets
  /users:
    get:
      consumes:
      - application/json
      description: Данный запрос позволяет получить список всех пользователей и их
        данных
      produces:
      - application/json
      responses: {}
      summary: Все пользователи
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
